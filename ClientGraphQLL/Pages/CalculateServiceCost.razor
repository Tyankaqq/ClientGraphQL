@page "/CalculateServiceCost"
@using ClientGraphQL.DataAccess
@using ClientGraphQL.DataAccess.Model

<h3>Общая стоимость предоставленных услуг</h3>

@if (_totalCost == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>Общая стоимость: @_totalCost:₽</p>
}

@code {
    private decimal? _totalCost;

    protected override async Task OnInitializedAsync()
    {
        await CalculateCost();
    }

    private async Task CalculateCost()
    {
        try
        {
            string query = @"
            query {
                totalCost: services {
                    price
                }
            }";

            var services = await Query.ExecuteQueryReturnListAsync<Service>("totalCost", query);
            _totalCost = services.Sum(s => s.Price);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error calculating service cost: {ex.Message}");
        }
    }
}
